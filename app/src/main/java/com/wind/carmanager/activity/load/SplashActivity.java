package com.wind.carmanager.activity.load;import android.Manifest;import android.content.Intent;import android.net.Uri;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.provider.Settings;import android.text.TextUtils;import android.view.View;import com.wind.carmanager.R;import com.wind.carmanager.activity.MainActivity;import com.wind.carmanager.base.BaseActivity;import com.wind.carmanager.dialog.IOSAlertDialog;import com.wind.carmanager.utils.BaseInfoSPUtil;import com.wind.carmanager.utils.PermissionListener;import java.util.List;/** * 启动页 */public class SplashActivity extends BaseActivity {    private static final int CODE = 11;    private static final String TAG = SplashActivity.class.getSimpleName();    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_splash);        View decorView = getWindow().getDecorView();        decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN);        if (Build.VERSION.SDK_INT >= 23) {            checkPermission();        } else {            setting();        }    }    private void setting() {        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                turnToMain();            }        }, 1500);    }    /**     * 申请打电话权限     */    private void checkPermission() {        requestRuntimePermission(new String[]{                Manifest.permission.WRITE_EXTERNAL_STORAGE,                Manifest.permission.READ_EXTERNAL_STORAGE,                Manifest.permission.ACCESS_COARSE_LOCATION,                Manifest.permission.ACCESS_FINE_LOCATION        }, new PermissionListener() {            @Override            public void onGranted() {                setting();            }            @Override            public void onDenied(List<String> deniedPermission) {                IOSAlertDialog iosAlertDialog = new IOSAlertDialog(SplashActivity.this);                iosAlertDialog.builder().setTitle("温馨提示").setMessage("当前应用缺少必要权限。\n" + "请到\"设置\"-\"权限\"-打开所需权限。")                        .setNegativeButton("取消", new View.OnClickListener() {                            @Override                            public void onClick(View v) {                            }                        }).setPositiveButton("去设置", new View.OnClickListener() {                    @Override                    public void onClick(View v) {                        startAppSettings();                    }                }).show();            }        });    }    /**     * 启动应用的设置     *     * @since 2.5.0     */    private void startAppSettings() {        Intent intent = new Intent(                Settings.ACTION_APPLICATION_DETAILS_SETTINGS);        intent.setData(Uri.parse("package:" + getPackageName()));        startActivityForResult(intent, CODE);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == CODE) {            checkPermission();        }    }    private void turnToMain() {        if (TextUtils.isEmpty(BaseInfoSPUtil.getInstance().getLoginToken(this))) {            openActivity(LoginActivity.class);        } else {            openActivity(MainActivity.class);        }        finish();    }}